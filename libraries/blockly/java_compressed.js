





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" media="all" integrity="sha512-UDS3MR1FfvqHmqZAs2MWSDCWPwLemVRLqCwld4/zfwH0vhv7I6RYmDnMnNAVQKP1YYvqnccOCH4iOhFaUUyrjw==" rel="stylesheet" href="https://github.githubassets.com/assets/frameworks-2e9090135c22aad5f56c2f72dcba7880.css" />
  <link crossorigin="anonymous" media="all" integrity="sha512-p4eUPemTc/4dlxCrmhH7lQDBSMyxvSF/8JUgk1+wawzib+okmfn1cNuyiRp9pfB76zPitgclXdaPUJivU2s/aw==" rel="stylesheet" href="https://github.githubassets.com/assets/site-789f905d50a214e0c8606578148aa830.css" />
    <link crossorigin="anonymous" media="all" integrity="sha512-bnWNt5aCIAqrRCDcaMXqFcKDZP8Zy31S4RFvaf7/yuSe6emQ1GfFHXAJUo+1ok5aO7AQGNB+jtqky1GUsUo5lQ==" rel="stylesheet" href="https://github.githubassets.com/assets/github-989ddaf006bcf7252e11cff4475d58fc.css" />
    
    
    
    

  <meta name="viewport" content="width=device-width">
  
  <title>blockly_java_edx/java_compressed.js at edx_java_only · guizos/blockly_java_edx · GitHub</title>
    <meta name="description" content="Port of Blockly to generate Java code (for and edx course) - guizos/blockly_java_edx">
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    <meta name="twitter:image:src" content="https://avatars3.githubusercontent.com/u/7448604?s=400&amp;v=4" /><meta name="twitter:site" content="@github" /><meta name="twitter:card" content="summary" /><meta name="twitter:title" content="guizos/blockly_java_edx" /><meta name="twitter:description" content="Port of Blockly to generate Java code (for and edx course) - guizos/blockly_java_edx" />
    <meta property="og:image" content="https://avatars3.githubusercontent.com/u/7448604?s=400&amp;v=4" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="guizos/blockly_java_edx" /><meta property="og:url" content="https://github.com/guizos/blockly_java_edx" /><meta property="og:description" content="Port of Blockly to generate Java code (for and edx course) - guizos/blockly_java_edx" />

  <link rel="assets" href="https://github.githubassets.com/">
  
  <meta name="pjax-timeout" content="1000">
  
  <meta name="request-id" content="CD4D:6CF4:404850:6A5098:5D565550" data-pjax-transient>


  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

      <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
    <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">

  <meta name="octolytics-host" content="collector.githubapp.com" /><meta name="octolytics-app-id" content="github" /><meta name="octolytics-event-url" content="https://collector.githubapp.com/github-external/browser_event" /><meta name="octolytics-dimension-request_id" content="CD4D:6CF4:404850:6A5098:5D565550" /><meta name="octolytics-dimension-region_edge" content="iad" /><meta name="octolytics-dimension-region_render" content="iad" />
<meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" />



    <meta name="google-analytics" content="UA-3769691-2">


<meta class="js-ga-set" name="dimension1" content="Logged Out">



  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="OGQ1NjFkYTVmZDZjOWFhYTdhZThjYjRhMWJiYWJiYzZkYzUxNDhlOWZkMjBkZGFmYzVkZDJmMDZiNjBjNGEwNnx7InJlbW90ZV9hZGRyZXNzIjoiODQuNzMuMTY3LjE0IiwicmVxdWVzdF9pZCI6IkNENEQ6NkNGNDo0MDQ4NTA6NkE1MDk4OjVENTY1NTUwIiwidGltZXN0YW1wIjoxNTY1OTM5MDUyLCJob3N0IjoiZ2l0aHViLmNvbSJ9">

    <meta name="enabled-features" content="ACTIONS_V2_ON_MARKETPLACE,MARKETPLACE_FEATURED_BLOG_POSTS,MARKETPLACE_INVOICED_BILLING,MARKETPLACE_SOCIAL_PROOF_CUSTOMERS,MARKETPLACE_TRENDING_SOCIAL_PROOF,MARKETPLACE_RECOMMENDATIONS,MARKETPLACE_PENDING_INSTALLATIONS">

  <meta name="html-safe-nonce" content="2b3fe8d4196271e097d3116988fc8750b014df6f">

  <meta http-equiv="x-pjax-version" content="880531990fb4628f31262a9a82216ec8">
  

      <link href="https://github.com/guizos/blockly_java_edx/commits/edx_java_only.atom" rel="alternate" title="Recent Commits to blockly_java_edx:edx_java_only" type="application/atom+xml">

  <meta name="go-import" content="github.com/guizos/blockly_java_edx git https://github.com/guizos/blockly_java_edx.git">

  <meta name="octolytics-dimension-user_id" content="7448604" /><meta name="octolytics-dimension-user_login" content="guizos" /><meta name="octolytics-dimension-repository_id" content="31287329" /><meta name="octolytics-dimension-repository_nwo" content="guizos/blockly_java_edx" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="31287329" /><meta name="octolytics-dimension-repository_network_root_nwo" content="guizos/blockly_java_edx" /><meta name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" content="false" />


    <link rel="canonical" href="https://github.com/guizos/blockly_java_edx/blob/edx_java_only/java_compressed.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://github.githubassets.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://github.githubassets.com/favicon.ico">

<meta name="theme-color" content="#1e2327">





  <link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-out env-production page-responsive page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="px-2 py-4 bg-blue text-white show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    


        <header class="Header-old header-logged-out js-details-container Details position-relative f4 py-2" role="banner">
  <div class="container-lg d-lg-flex flex-items-center p-responsive">
    <div class="d-flex flex-justify-between flex-items-center">
        <a class="mr-4" href="https://github.com/" aria-label="Homepage" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
          <svg height="32" class="octicon octicon-mark-github text-white" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
        </a>

          <div class="d-lg-none css-truncate css-truncate-target width-fit p-2">
            
              <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
    <a class="Header-link" href="/guizos">guizos</a>
    /
    <a class="Header-link" href="/guizos/blockly_java_edx">blockly_java_edx</a>


          </div>

        <div class="d-flex flex-items-center">
            <a href="/join?source=header-repo"
              class="d-inline-block d-lg-none f5 text-white no-underline border border-gray-dark rounded-2 px-2 py-1 mr-3 mr-sm-5"
              data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:&quot;807573475.1516226544&quot;,&quot;originating_request_id&quot;:&quot;CD4D:6CF4:404850:6A5098:5D565550&quot;,&quot;originating_url&quot;:&quot;https://github.com/guizos/blockly_java_edx/blob/edx_java_only/java_compressed.js&quot;,&quot;referrer&quot;:&quot;https://github.com/guizos/blockly_java_edx&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="81c64f45bf57b7897861c3e85c280d41d7582336613be9e40a73d06a1e674a72"
              data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">
              Sign&nbsp;up
            </a>

          <button class="btn-link d-lg-none mt-1 js-details-target" type="button" aria-label="Toggle navigation" aria-expanded="false">
            <svg height="24" class="octicon octicon-three-bars text-white" viewBox="0 0 12 16" version="1.1" width="18" aria-hidden="true"><path fill-rule="evenodd" d="M11.41 9H.59C0 9 0 8.59 0 8c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zm0-4H.59C0 5 0 4.59 0 4c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zM.59 11H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1H.59C0 13 0 12.59 0 12c0-.59 0-1 .59-1z"/></svg>
          </button>
        </div>
    </div>

    <div class="HeaderMenu HeaderMenu--logged-out position-fixed top-0 right-0 bottom-0 height-fit position-lg-relative d-lg-flex flex-justify-between flex-items-center flex-auto">
      <div class="d-flex d-lg-none flex-justify-end border-bottom bg-gray-light p-3">
        <button class="btn-link js-details-target" type="button" aria-label="Toggle navigation" aria-expanded="false">
          <svg height="24" class="octicon octicon-x text-gray" viewBox="0 0 12 16" version="1.1" width="18" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
        </button>
      </div>

        <nav class="mt-0 px-3 px-lg-0 mb-5 mb-lg-0" aria-label="Global">
          <ul class="d-lg-flex list-style-none">
              <li class="d-block d-lg-flex flex-lg-nowrap flex-lg-items-center border-bottom border-lg-bottom-0 mr-0 mr-lg-3 edge-item-fix position-relative flex-wrap flex-justify-between d-flex flex-items-center ">
                <details class="HeaderMenu-details details-overlay details-reset width-full">
                  <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
                    Why GitHub?
                    <svg x="0px" y="0px" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative">
                      <path d="M1,1l6.2,6L13,1"></path>
                    </svg>
                  </summary>
                  <div class="dropdown-menu flex-auto rounded-1 bg-white px-0 mt-0 pb-4 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
                    <a href="/features" class="py-2 lh-condensed-ultra d-block link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Features">Features <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a>
                    <ul class="list-style-none f5 pb-3">
                      <li class="edge-item-fix"><a href="/features/code-review/" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Code review">Code review</a></li>
                      <li class="edge-item-fix"><a href="/features/project-management/" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Project management">Project management</a></li>
                      <li class="edge-item-fix"><a href="/features/integrations" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Integrations">Integrations</a></li>
                      <li class="edge-item-fix"><a href="/features/actions" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Actions">Actions</a>
                          <li class="edge-item-fix"><a href="/features/package-registry" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Package Registry">Package registry</a>
                      <li class="edge-item-fix"><a href="/features#team-management" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Team management">Team management</a></li>
                      <li class="edge-item-fix"><a href="/features#social-coding" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Social coding">Social coding</a></li>
                      <li class="edge-item-fix"><a href="/features#documentation" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Documentation">Documentation</a></li>
                      <li class="edge-item-fix"><a href="/features#code-hosting" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Code hosting">Code hosting</a></li>
                    </ul>

                    <ul class="list-style-none mb-0 border-lg-top pt-lg-3">
                      <li class="edge-item-fix"><a href="/customer-stories" class="py-2 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Customer stories">Customer stories <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                      <li class="edge-item-fix"><a href="/security" class="py-2 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Security">Security <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                    </ul>
                  </div>
                </details>
              </li>
              <li class="border-bottom border-lg-bottom-0 mr-0 mr-lg-3">
                <a href="/enterprise" class="HeaderMenu-link no-underline py-3 d-block d-lg-inline-block" data-ga-click="(Logged out) Header, go to Enterprise">Enterprise</a>
              </li>

              <li class="d-block d-lg-flex flex-lg-nowrap flex-lg-items-center border-bottom border-lg-bottom-0 mr-0 mr-lg-3 edge-item-fix position-relative flex-wrap flex-justify-between d-flex flex-items-center ">
                <details class="HeaderMenu-details details-overlay details-reset width-full">
                  <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
                    Explore
                    <svg x="0px" y="0px" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative">
                      <path d="M1,1l6.2,6L13,1"></path>
                    </svg>
                  </summary>

                  <div class="dropdown-menu flex-auto rounded-1 bg-white px-0 pt-2 pb-0 mt-0 pb-4 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
                    <ul class="list-style-none mb-3">
                      <li class="edge-item-fix"><a href="/explore" class="py-2 lh-condensed-ultra d-block link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Explore">Explore GitHub <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                    </ul>

                    <h4 class="text-gray-light text-normal text-mono f5 mb-2 border-lg-top pt-lg-3">Learn &amp; contribute</h4>
                    <ul class="list-style-none mb-3">
                      <li class="edge-item-fix"><a href="/topics" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Topics">Topics</a></li>
                        <li class="edge-item-fix"><a href="/collections" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Collections">Collections</a></li>
                      <li class="edge-item-fix"><a href="/trending" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Trending">Trending</a></li>
                      <li class="edge-item-fix"><a href="https://lab.github.com/" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Learning lab">Learning Lab</a></li>
                      <li class="edge-item-fix"><a href="https://opensource.guide" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Open source guides">Open source guides</a></li>
                    </ul>

                    <h4 class="text-gray-light text-normal text-mono f5 mb-2 border-lg-top pt-lg-3">Connect with others</h4>
                    <ul class="list-style-none mb-0">
                      <li class="edge-item-fix"><a href="https://github.com/events" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Events">Events</a></li>
                      <li class="edge-item-fix"><a href="https://github.community" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Community forum">Community forum</a></li>
                      <li class="edge-item-fix"><a href="https://education.github.com" class="py-2 pb-0 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to GitHub Education">GitHub Education</a></li>
                    </ul>
                  </div>
                </details>
              </li>

              <li class="border-bottom border-lg-bottom-0 mr-0 mr-lg-3">
                <a href="/marketplace" class="HeaderMenu-link no-underline py-3 d-block d-lg-inline-block" data-ga-click="(Logged out) Header, go to Marketplace">Marketplace</a>
              </li>

              <li class="d-block d-lg-flex flex-lg-nowrap flex-lg-items-center border-bottom border-lg-bottom-0 mr-0 mr-lg-3 edge-item-fix position-relative flex-wrap flex-justify-between d-flex flex-items-center ">
                <details class="HeaderMenu-details details-overlay details-reset width-full">
                  <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
                    Pricing
                    <svg x="0px" y="0px" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative">
                       <path d="M1,1l6.2,6L13,1"></path>
                    </svg>
                  </summary>

                  <div class="dropdown-menu flex-auto rounded-1 bg-white px-0 pt-2 pb-4 mt-0 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
                    <a href="/pricing" class="pb-2 lh-condensed-ultra d-block link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Pricing">Plans <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a>

                    <ul class="list-style-none mb-3">
                      <li class="edge-item-fix"><a href="/pricing#feature-comparison" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Compare plans">Compare plans</a></li>
                      <li class="edge-item-fix"><a href="https://enterprise.github.com/contact" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Contact Sales">Contact Sales</a></li>
                    </ul>

                    <ul class="list-style-none mb-0 border-lg-top pt-lg-3">
                      <li class="edge-item-fix"><a href="/nonprofit" class="py-2 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Nonprofits">Nonprofit <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                      <li class="edge-item-fix"><a href="https://education.github.com" class="py-2 pb-0 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover"  data-ga-click="(Logged out) Header, go to Education">Education <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                    </ul>
                  </div>
                </details>
              </li>
          </ul>
        </nav>

      <div class="d-lg-flex flex-items-center px-3 px-lg-0 text-center text-lg-left">
          <div class="d-lg-flex mb-3 mb-lg-0">
            <div class="header-search flex-self-stretch flex-lg-self-auto mr-0 mr-lg-3 mb-3 mb-lg-0 scoped-search site-scoped-search js-site-search position-relative js-jump-to"
  role="combobox"
  aria-owns="jump-to-results"
  aria-label="Search or jump to"
  aria-haspopup="listbox"
  aria-expanded="false"
>
  <div class="position-relative">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" role="search" aria-label="Site" data-scope-type="Repository" data-scope-id="31287329" data-scoped-search-url="/guizos/blockly_java_edx/search" data-unscoped-search-url="/search" action="/guizos/blockly_java_edx/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
      <label class="form-control input-sm header-search-wrapper p-0 header-search-wrapper-jump-to position-relative d-flex flex-justify-between flex-items-center js-chromeless-input-container">
        <input type="text"
          class="form-control input-sm header-search-input jump-to-field js-jump-to-field js-site-search-focus js-site-search-field is-clearable"
          data-hotkey="s,/"
          name="q"
          value=""
          placeholder="Search"
          data-unscoped-placeholder="Search GitHub"
          data-scoped-placeholder="Search"
          autocapitalize="off"
          aria-autocomplete="list"
          aria-controls="jump-to-results"
          aria-label="Search"
          data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations#csrf-token=VjmEpFODFCYMtzYU9XENZWQGBvLSGHdD8xa34wFmcnjF6j5TQ68D/FYkUuyjdZM+BfkxjLmHw+mjV1CsBzadZg=="
          spellcheck="false"
          autocomplete="off"
          >
          <input type="hidden" class="js-site-search-type-field" name="type" >
            <img src="https://github.githubassets.com/images/search-key-slash.svg" alt="" class="mr-2 header-search-key-slash">

            <div class="Box position-absolute overflow-hidden d-none jump-to-suggestions js-jump-to-suggestions-container">
              
<ul class="d-none js-jump-to-suggestions-template-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-suggestion" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

</ul>

<ul class="d-none js-jump-to-no-results-template-container">
  <li class="d-flex flex-justify-center flex-items-center f5 d-none js-jump-to-suggestion p-2">
    <span class="text-gray">No suggested jump to results</span>
  </li>
</ul>

<ul id="jump-to-results" role="listbox" class="p-0 m-0 js-navigation-container jump-to-suggestions-results-container js-jump-to-suggestions-results-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-global-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>


</ul>

            </div>
      </label>
</form>  </div>
</div>

          </div>

        <a href="/login?return_to=%2Fguizos%2Fblockly_java_edx%2Fblob%2Fedx_java_only%2Fjava_compressed.js"
          class="HeaderMenu-link no-underline mr-3"
          data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:&quot;807573475.1516226544&quot;,&quot;originating_request_id&quot;:&quot;CD4D:6CF4:404850:6A5098:5D565550&quot;,&quot;originating_url&quot;:&quot;https://github.com/guizos/blockly_java_edx/blob/edx_java_only/java_compressed.js&quot;,&quot;referrer&quot;:&quot;https://github.com/guizos/blockly_java_edx&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="a80a0dd9ad7d0478316e63f8681838622ffcacf960c1cc34343eb99ae9884db7"
          data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">
          Sign&nbsp;in
        </a>
          <a href="/join?source=header-repo"
            class="HeaderMenu-link d-inline-block no-underline border border-gray-dark rounded-1 px-2 py-1"
            data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:&quot;807573475.1516226544&quot;,&quot;originating_request_id&quot;:&quot;CD4D:6CF4:404850:6A5098:5D565550&quot;,&quot;originating_url&quot;:&quot;https://github.com/guizos/blockly_java_edx/blob/edx_java_only/java_compressed.js&quot;,&quot;referrer&quot;:&quot;https://github.com/guizos/blockly_java_edx&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="a80a0dd9ad7d0478316e63f8681838622ffcacf960c1cc34343eb99ae9884db7"
            data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">
            Sign&nbsp;up
          </a>
      </div>
    </div>
  </div>
</header>

  </div>

  <div id="start-of-content" class="show-on-focus"></div>


    <div id="js-flash-container">

</div>



  <div class="application-main " data-commit-hovercards-enabled>
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <main  >
      


  










  <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav pt-0 pt-lg-4 ">
    <div class="repohead-details-container clearfix container-lg p-responsive d-none d-lg-block">

      <ul class="pagehead-actions">




  <li>
    
  <a class="tooltipped tooltipped-s btn btn-sm btn-with-count" aria-label="You must be signed in to watch a repository" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;client_id&quot;:&quot;807573475.1516226544&quot;,&quot;originating_request_id&quot;:&quot;CD4D:6CF4:404850:6A5098:5D565550&quot;,&quot;originating_url&quot;:&quot;https://github.com/guizos/blockly_java_edx/blob/edx_java_only/java_compressed.js&quot;,&quot;referrer&quot;:&quot;https://github.com/guizos/blockly_java_edx&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="fc0268fc59238cc2eb11ba6a4759d6b2a7bc67ee27227e3b98d220988492c9e1" href="/login?return_to=%2Fguizos%2Fblockly_java_edx">
    <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
    Watch
</a>    <a class="social-count" href="/guizos/blockly_java_edx/watchers"
       aria-label="2 users are watching this repository">
      2
    </a>

  </li>

  <li>
        <a class="btn btn-sm btn-with-count tooltipped tooltipped-s" aria-label="You must be signed in to star a repository" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:31287329,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;client_id&quot;:&quot;807573475.1516226544&quot;,&quot;originating_request_id&quot;:&quot;CD4D:6CF4:404850:6A5098:5D565550&quot;,&quot;originating_url&quot;:&quot;https://github.com/guizos/blockly_java_edx/blob/edx_java_only/java_compressed.js&quot;,&quot;referrer&quot;:&quot;https://github.com/guizos/blockly_java_edx&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="f0a85b232ff15aadd4e6c0f2edf2308d4fd9d04ba67780b8296ddf606592b2c8" href="/login?return_to=%2Fguizos%2Fblockly_java_edx">
      <svg class="octicon octicon-star v-align-text-bottom" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
      Star
</a>
    <a class="social-count js-social-count" href="/guizos/blockly_java_edx/stargazers"
      aria-label="3 users starred this repository">
      3
    </a>

  </li>

  <li>
      <a class="btn btn-sm btn-with-count tooltipped tooltipped-s" aria-label="You must be signed in to fork a repository" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;repo details fork button&quot;,&quot;repository_id&quot;:31287329,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;client_id&quot;:&quot;807573475.1516226544&quot;,&quot;originating_request_id&quot;:&quot;CD4D:6CF4:404850:6A5098:5D565550&quot;,&quot;originating_url&quot;:&quot;https://github.com/guizos/blockly_java_edx/blob/edx_java_only/java_compressed.js&quot;,&quot;referrer&quot;:&quot;https://github.com/guizos/blockly_java_edx&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="ebdede2439cc6530552dade231a79abff27a02e4e1dec80ab718cc6d89e973f7" href="/login?return_to=%2Fguizos%2Fblockly_java_edx">
        <svg class="octicon octicon-repo-forked v-align-text-bottom" viewBox="0 0 10 16" version="1.1" width="10" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
        Fork
</a>
    <a href="/guizos/blockly_java_edx/network/members" class="social-count"
       aria-label="3 users forked this repository">
      3
    </a>
  </li>
</ul>

      <h1 class="public ">
    <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a class="url fn" rel="author" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=7448604" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/guizos">guizos</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a data-pjax="#js-repo-pjax-container" href="/guizos/blockly_java_edx">blockly_java_edx</a></strong>
  

</h1>

    </div>
    
<nav class="hx_reponav reponav js-repo-nav js-sidenav-container-pjax container-lg p-responsive d-none d-lg-block"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
    aria-label="Repository"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a class="js-selected-navigation-item selected reponav-item" itemprop="url" data-hotkey="g c" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /guizos/blockly_java_edx" href="/guizos/blockly_java_edx">
      <svg class="octicon octicon-code" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" data-hotkey="g i" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /guizos/blockly_java_edx/issues" href="/guizos/blockly_java_edx/issues">
        <svg class="octicon octicon-issue-opened" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">0</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a data-hotkey="g p" itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /guizos/blockly_java_edx/pulls" href="/guizos/blockly_java_edx/pulls">
      <svg class="octicon octicon-git-pull-request" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">0</span>
      <meta itemprop="position" content="3">
</a>  </span>


    <a data-hotkey="g b" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /guizos/blockly_java_edx/projects" href="/guizos/blockly_java_edx/projects">
      <svg class="octicon octicon-project" viewBox="0 0 15 16" version="1.1" width="15" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>


    <a data-skip-pjax="true" class="js-selected-navigation-item reponav-item" data-selected-links="security alerts policy /guizos/blockly_java_edx/security/advisories" href="/guizos/blockly_java_edx/security/advisories">
      <svg class="octicon octicon-shield" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 2l7-2 7 2v6.02C14 12.69 8.69 16 7 16c-1.69 0-7-3.31-7-7.98V2zm1 .75L7 1l6 1.75v5.268C13 12.104 8.449 15 7 15c-1.449 0-6-2.896-6-6.982V2.75zm1 .75L7 2v12c-1.207 0-5-2.482-5-5.985V3.5z"/></svg>
      Security
</a>
    <a class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse people /guizos/blockly_java_edx/pulse" href="/guizos/blockly_java_edx/pulse">
      <svg class="octicon octicon-graph" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
      Insights
</a>

</nav>

  <div class="reponav-wrapper reponav-small d-lg-none">
  <nav class="reponav js-reponav text-center no-wrap"
       itemscope
       itemtype="http://schema.org/BreadcrumbList">

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a class="js-selected-navigation-item selected reponav-item" itemprop="url" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /guizos/blockly_java_edx" href="/guizos/blockly_java_edx">
        <span itemprop="name">Code</span>
        <meta itemprop="position" content="1">
</a>    </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /guizos/blockly_java_edx/issues" href="/guizos/blockly_java_edx/issues">
          <span itemprop="name">Issues</span>
          <span class="Counter">0</span>
          <meta itemprop="position" content="2">
</a>      </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /guizos/blockly_java_edx/pulls" href="/guizos/blockly_java_edx/pulls">
        <span itemprop="name">Pull requests</span>
        <span class="Counter">0</span>
        <meta itemprop="position" content="3">
</a>    </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /guizos/blockly_java_edx/projects" href="/guizos/blockly_java_edx/projects">
          <span itemprop="name">Projects</span>
          <span class="Counter">0</span>
          <meta itemprop="position" content="4">
</a>      </span>


      <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="security alerts policy /guizos/blockly_java_edx/security/advisories" href="/guizos/blockly_java_edx/security/advisories">
        <span itemprop="name">Security</span>
        <meta itemprop="position" content="6">
</a>
      <a class="js-selected-navigation-item reponav-item" data-selected-links="pulse /guizos/blockly_java_edx/pulse" href="/guizos/blockly_java_edx/pulse">
        Pulse
</a>

  </nav>
</div>


  </div>
<div class="container-lg clearfix new-discussion-timeline experiment-repo-nav  p-responsive">
  <div class="repository-content ">

    
    


  


    <a class="d-none js-permalink-shortcut" data-hotkey="y" href="/guizos/blockly_java_edx/blob/905fd85565e8179c7c707212f0a50e12e8d90377/java_compressed.js">Permalink</a>

    <!-- blob contrib key: blob_contributors:v21:d1c4f286f601566dff6551523d2b6607 -->
          <div class="signup-prompt-bg rounded-1">
      <div class="signup-prompt p-4 text-center mb-4 rounded-1">
        <div class="position-relative">
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form action="/prompt_dismissals/signup" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="_method" value="put" /><input type="hidden" name="authenticity_token" value="178k0eI3fomupddQiwvgfok/vpx9f4OM+d0ilj9CpetkMldOL4iO2hks765r+nb5dRx7E52pfiPlDXiATv7d+w==" />
            <button type="submit" class="position-absolute top-0 right-0 btn-link link-gray" data-ga-click="(Logged out) Sign up prompt, clicked Dismiss, text:dismiss">
              Dismiss
            </button>
</form>          <h3 class="pt-2">Join GitHub today</h3>
          <p class="col-6 mx-auto">GitHub is home to over 40 million developers working together to host and review code, manage projects, and build software together.</p>
          <a class="btn btn-primary" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;files signup prompt&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:&quot;807573475.1516226544&quot;,&quot;originating_request_id&quot;:&quot;CD4D:6CF4:404850:6A5098:5D565550&quot;,&quot;originating_url&quot;:&quot;https://github.com/guizos/blockly_java_edx/blob/edx_java_only/java_compressed.js&quot;,&quot;referrer&quot;:&quot;https://github.com/guizos/blockly_java_edx&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="b4b214172c7d0e67f5010fe1cd92540616d2a56b68b0cb5ec0363ab223e4439b" data-ga-click="(Logged out) Sign up prompt, clicked Sign up, text:sign-up" href="/join?source=prompt-blob-show">Sign up</a>
        </div>
      </div>
    </div>


    <div class="d-flex flex-items-start flex-shrink-0 pb-3 flex-column flex-md-row">
      <span class="d-flex flex-justify-between width-full width-md-auto">
        
<details class="details-reset details-overlay select-menu branch-select-menu  hx_rsm" id="branch-select-menu">
  <summary class="btn btn-sm select-menu-button css-truncate"
           data-hotkey="w"
           title="Switch branches or tags">
    <i>Branch:</i>
    <span class="css-truncate-target" data-menu-button>edx_java_only</span>
  </summary>

  <details-menu class="select-menu-modal hx_rsm-modal position-absolute" style="z-index: 99;" src="/guizos/blockly_java_edx/ref-list/edx_java_only/java_compressed.js?source_action=show&amp;source_controller=blob" preload>
    <include-fragment class="select-menu-loading-overlay anim-pulse">
      <svg height="32" class="octicon octicon-octoface" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M14.7 5.34c.13-.32.55-1.59-.13-3.31 0 0-1.05-.33-3.44 1.3-1-.28-2.07-.32-3.13-.32s-2.13.04-3.13.32c-2.39-1.64-3.44-1.3-3.44-1.3-.68 1.72-.26 2.99-.13 3.31C.49 6.21 0 7.33 0 8.69 0 13.84 3.33 15 7.98 15S16 13.84 16 8.69c0-1.36-.49-2.48-1.3-3.35zM8 14.02c-3.3 0-5.98-.15-5.98-3.35 0-.76.38-1.48 1.02-2.07 1.07-.98 2.9-.46 4.96-.46 2.07 0 3.88-.52 4.96.46.65.59 1.02 1.3 1.02 2.07 0 3.19-2.68 3.35-5.98 3.35zM5.49 9.01c-.66 0-1.2.8-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.54-1.78-1.2-1.78zm5.02 0c-.66 0-1.2.79-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.53-1.78-1.2-1.78z"/></svg>
    </include-fragment>
  </details-menu>
</details>

        <div class="BtnGroup flex-shrink-0 d-md-none">
          <a href="/guizos/blockly_java_edx/find/edx_java_only"
                class="js-pjax-capture-input btn btn-sm BtnGroup-item"
                data-pjax
                data-hotkey="t">
            Find file
          </a>
          <clipboard-copy value="java_compressed.js" class="btn btn-sm BtnGroup-item">
            Copy path
          </clipboard-copy>
        </div>
      </span>
      <h2 id="blob-path" class="breadcrumb flex-auto min-width-0 text-normal flex-md-self-center ml-md-2 mr-md-3 my-2 my-md-0">
        <span class="js-repo-root text-bold"><span class="js-path-segment"><a data-pjax="true" href="/guizos/blockly_java_edx"><span>blockly_java_edx</span></a></span></span><span class="separator">/</span><strong class="final-path">java_compressed.js</strong>
      </h2>

      <div class="BtnGroup flex-shrink-0 d-none d-md-inline-block">
        <a href="/guizos/blockly_java_edx/find/edx_java_only"
              class="js-pjax-capture-input btn btn-sm BtnGroup-item"
              data-pjax
              data-hotkey="t">
          Find file
        </a>
        <clipboard-copy value="java_compressed.js" class="btn btn-sm BtnGroup-item">
          Copy path
        </clipboard-copy>
      </div>
    </div>



    
  <div class="Box Box--condensed d-flex flex-column flex-shrink-0">
      <div class="Box-body d-flex flex-justify-between bg-blue-light flex-column flex-md-row flex-items-start flex-md-items-center">
        <span class="pr-md-4 f6">
          <a rel="author" data-skip-pjax="true" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=7448604" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/guizos"><img class="avatar" src="https://avatars2.githubusercontent.com/u/7448604?s=40&amp;v=4" width="20" height="20" alt="@guizos" /></a>
          <a class="text-bold link-gray-dark lh-default v-align-middle" rel="author" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=7448604" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/guizos">guizos</a>
            <span class="lh-default v-align-middle">
              <a data-pjax="true" title="Edx only first commit

Trying to get rid of all non essential blocky code for edx Java." class="link-gray" href="/guizos/blockly_java_edx/commit/905fd85565e8179c7c707212f0a50e12e8d90377">Edx only first commit</a>
            </span>
        </span>
        <span class="d-inline-block flex-shrink-0 v-align-bottom f6 mt-2 mt-md-0">
          <a class="pr-2 text-mono link-gray" href="/guizos/blockly_java_edx/commit/905fd85565e8179c7c707212f0a50e12e8d90377" data-pjax>905fd85</a>
          <relative-time datetime="2015-02-24T23:22:56Z">Feb 25, 2015</relative-time>
        </span>
      </div>

    <div class="Box-body d-flex flex-items-center flex-auto f6 border-bottom-0 flex-wrap" >
      <details class="details-reset details-overlay details-overlay-dark lh-default text-gray-dark float-left mr-2" id="blob_contributors_box">
        <summary class="btn-link" aria-haspopup="dialog">
          <span><strong>1</strong> contributor</span>
        </summary>
        <details-dialog
          class="Box Box--overlay d-flex flex-column anim-fade-in fast"
          aria-label="Users who have contributed to this file"
          src="/guizos/blockly_java_edx/contributors/edx_java_only/java_compressed.js/list" preload>
          <div class="Box-header">
            <button class="Box-btn-octicon btn-octicon float-right" type="button" aria-label="Close dialog" data-close-dialog>
              <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
            </button>
            <h3 class="Box-title">
              Users who have contributed to this file
            </h3>
          </div>
          <include-fragment class="octocat-spinner my-3" aria-label="Loading..."></include-fragment>
        </details-dialog>
      </details>
    </div>
  </div>





    <div class="Box mt-3 position-relative">
      
<div class="Box-header py-2 d-flex flex-column flex-shrink-0 flex-md-row flex-md-items-center">

  <div class="text-mono f6 flex-auto pr-3 flex-order-2 flex-md-order-1 mt-2 mt-md-0">
      145 lines (138 sloc)
      <span class="file-info-divider"></span>
    50.7 KB
  </div>

  <div class="d-flex py-1 py-md-0 flex-auto flex-order-1 flex-md-order-2 flex-sm-grow-0 flex-justify-between">

    <div class="BtnGroup">
      <a id="raw-url" class="btn btn-sm BtnGroup-item" href="/guizos/blockly_java_edx/raw/edx_java_only/java_compressed.js">Raw</a>
        <a class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b" href="/guizos/blockly_java_edx/blame/edx_java_only/java_compressed.js">Blame</a>
      <a rel="nofollow" class="btn btn-sm BtnGroup-item" href="/guizos/blockly_java_edx/commits/edx_java_only/java_compressed.js">History</a>
    </div>


    <div>
            <a class="btn-octicon tooltipped tooltipped-nw hide-sm"
               href="https://desktop.github.com"
               aria-label="Open this file in GitHub Desktop"
               data-ga-click="Repository, open with desktop, type:windows">
                <svg class="octicon octicon-device-desktop" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
            </a>

          <button type="button" class="btn-octicon disabled tooltipped tooltipped-nw"
            aria-label="You must be signed in to make or propose changes">
            <svg class="octicon octicon-pencil" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
          </button>
          <button type="button" class="btn-octicon btn-octicon-danger disabled tooltipped tooltipped-nw"
            aria-label="You must be signed in to make or propose changes">
            <svg class="octicon octicon-trashcan" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
    </div>
  </div>
</div>




      

  <div itemprop="text" class="Box-body p-0 blob-wrapper data type-javascript ">
      
<table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Do not edit this file; automatically generated by build.py.</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>use strict<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line">Blockly.Java=new Blockly.Generator(&quot;Java&quot;);Blockly.Java.addReservedWords(&quot;Blockly,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,enum,export,extends,import,super,implements,interface,let,package,private,protected,public,static,yield,const,null,true,false,Array,ArrayBuffer,Boolean,Date,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Error,eval,EvalError,Float32Array,Float64Array,Function,Infinity,Int16Array,Int32Array,Int8Array,isFinite,isNaN,Iterator,JSON,Math,NaN,Number,Object,parseFloat,parseInt,RangeError,ReferenceError,RegExp,StopIteration,SyntaxError,TypeError,Uint16Array,Uint32Array,Uint8Array,Uint8ClampedArray,undefined,uneval,URIError,applicationCache,closed,Components,content,_content,controllers,crypto,defaultStatus,dialogArguments,directories,document,frameElement,frames,fullScreen,globalStorage,history,innerHeight,innerWidth,length,location,locationbar,localStorage,menubar,messageManager,mozAnimationStartTime,mozInnerScreenX,mozInnerScreenY,mozPaintCount,name,navigator,opener,outerHeight,outerWidth,pageXOffset,pageYOffset,parent,performance,personalbar,pkcs11,returnValue,screen,screenX,screenY,scrollbars,scrollMaxX,scrollMaxY,scrollX,scrollY,self,sessionStorage,sidebar,status,statusbar,toolbar,top,URL,window,addEventListener,alert,atob,back,blur,btoa,captureEvents,clearImmediate,clearInterval,clearTimeout,close,confirm,disableExternalCapture,dispatchEvent,dump,enableExternalCapture,escape,find,focus,forward,GeckoActiveXObject,getAttention,getAttentionWithCycleCount,getComputedStyle,getSelection,home,matchMedia,maximize,minimize,moveBy,moveTo,mozRequestAnimationFrame,open,openDialog,postMessage,print,prompt,QueryInterface,releaseEvents,removeEventListener,resizeBy,resizeTo,restore,routeEvent,scroll,scrollBy,scrollByLines,scrollByPages,scrollTo,setCursor,setImmediate,setInterval,setResizable,setTimeout,showModalDialog,sizeToContent,stop,unescape,updateCommands,XPCNativeWrapper,XPCSafeJSObjectWrapper,onabort,onbeforeunload,onblur,onchange,onclick,onclose,oncontextmenu,ondevicemotion,ondeviceorientation,ondragdrop,onerror,onfocus,onhashchange,onkeydown,onkeypress,onkeyup,onload,onmousedown,onmousemove,onmouseout,onmouseover,onmouseup,onmozbeforepaint,onpaint,onpopstate,onreset,onresize,onscroll,onselect,onsubmit,onunload,onpageshow,onpagehide,Image,Option,Worker,Event,Range,File,FileReader,Blob,BlobBuilder,Attr,CDATASection,CharacterData,Comment,console,DocumentFragment,DocumentType,DomConfiguration,DOMError,DOMErrorHandler,DOMException,DOMImplementation,DOMImplementationList,DOMImplementationRegistry,DOMImplementationSource,DOMLocator,DOMObject,DOMString,DOMStringList,DOMTimeStamp,DOMUserData,Entity,EntityReference,MediaQueryList,MediaQueryListListener,NameList,NamedNodeMap,Node,NodeFilter,NodeIterator,NodeList,Notation,Plugin,PluginArray,ProcessingInstruction,SharedWorker,Text,TimeRanges,Treewalker,TypeInfo,UserDataHandler,Worker,WorkerGlobalScope,HTMLDocument,HTMLElement,HTMLAnchorElement,HTMLAppletElement,HTMLAudioElement,HTMLAreaElement,HTMLBaseElement,HTMLBaseFontElement,HTMLBodyElement,HTMLBRElement,HTMLButtonElement,HTMLCanvasElement,HTMLDirectoryElement,HTMLDivElement,HTMLDListElement,HTMLEmbedElement,HTMLFieldSetElement,HTMLFontElement,HTMLFormElement,HTMLFrameElement,HTMLFrameSetElement,HTMLHeadElement,HTMLHeadingElement,HTMLHtmlElement,HTMLHRElement,HTMLIFrameElement,HTMLImageElement,HTMLInputElement,HTMLKeygenElement,HTMLLabelElement,HTMLLIElement,HTMLLinkElement,HTMLMapElement,HTMLMenuElement,HTMLMetaElement,HTMLModElement,HTMLObjectElement,HTMLOListElement,HTMLOptGroupElement,HTMLOptionElement,HTMLOutputElement,HTMLParagraphElement,HTMLParamElement,HTMLPreElement,HTMLQuoteElement,HTMLScriptElement,HTMLSelectElement,HTMLSourceElement,HTMLSpanElement,HTMLStyleElement,HTMLTableElement,HTMLTableCaptionElement,HTMLTableCellElement,HTMLTableDataCellElement,HTMLTableHeaderCellElement,HTMLTableColElement,HTMLTableRowElement,HTMLTableSectionElement,HTMLTextAreaElement,HTMLTimeElement,HTMLTitleElement,HTMLTrackElement,HTMLUListElement,HTMLUnknownElement,HTMLVideoElement,HTMLCanvasElement,CanvasRenderingContext2D,CanvasGradient,CanvasPattern,TextMetrics,ImageData,CanvasPixelArray,HTMLAudioElement,HTMLVideoElement,NotifyAudioAvailableEvent,HTMLCollection,HTMLAllCollection,HTMLFormControlsCollection,HTMLOptionsCollection,HTMLPropertiesCollection,DOMTokenList,DOMSettableTokenList,DOMStringMap,RadioNodeList,SVGDocument,SVGElement,SVGAElement,SVGAltGlyphElement,SVGAltGlyphDefElement,SVGAltGlyphItemElement,SVGAnimationElement,SVGAnimateElement,SVGAnimateColorElement,SVGAnimateMotionElement,SVGAnimateTransformElement,SVGSetElement,SVGCircleElement,SVGClipPathElement,SVGColorProfileElement,SVGCursorElement,SVGDefsElement,SVGDescElement,SVGEllipseElement,SVGFilterElement,SVGFilterPrimitiveStandardAttributes,SVGFEBlendElement,SVGFEColorMatrixElement,SVGFEComponentTransferElement,SVGFECompositeElement,SVGFEConvolveMatrixElement,SVGFEDiffuseLightingElement,SVGFEDisplacementMapElement,SVGFEDistantLightElement,SVGFEFloodElement,SVGFEGaussianBlurElement,SVGFEImageElement,SVGFEMergeElement,SVGFEMergeNodeElement,SVGFEMorphologyElement,SVGFEOffsetElement,SVGFEPointLightElement,SVGFESpecularLightingElement,SVGFESpotLightElement,SVGFETileElement,SVGFETurbulenceElement,SVGComponentTransferFunctionElement,SVGFEFuncRElement,SVGFEFuncGElement,SVGFEFuncBElement,SVGFEFuncAElement,SVGFontElement,SVGFontFaceElement,SVGFontFaceFormatElement,SVGFontFaceNameElement,SVGFontFaceSrcElement,SVGFontFaceUriElement,SVGForeignObjectElement,SVGGElement,SVGGlyphElement,SVGGlyphRefElement,SVGGradientElement,SVGLinearGradientElement,SVGRadialGradientElement,SVGHKernElement,SVGImageElement,SVGLineElement,SVGMarkerElement,SVGMaskElement,SVGMetadataElement,SVGMissingGlyphElement,SVGMPathElement,SVGPathElement,SVGPatternElement,SVGPolylineElement,SVGPolygonElement,SVGRectElement,SVGScriptElement,SVGStopElement,SVGStyleElement,SVGSVGElement,SVGSwitchElement,SVGSymbolElement,SVGTextElement,SVGTextPathElement,SVGTitleElement,SVGTRefElement,SVGTSpanElement,SVGUseElement,SVGViewElement,SVGVKernElement,SVGAngle,SVGColor,SVGICCColor,SVGElementInstance,SVGElementInstanceList,SVGLength,SVGLengthList,SVGMatrix,SVGNumber,SVGNumberList,SVGPaint,SVGPoint,SVGPointList,SVGPreserveAspectRatio,SVGRect,SVGStringList,SVGTransform,SVGTransformList,SVGAnimatedAngle,SVGAnimatedBoolean,SVGAnimatedEnumeration,SVGAnimatedInteger,SVGAnimatedLength,SVGAnimatedLengthList,SVGAnimatedNumber,SVGAnimatedNumberList,SVGAnimatedPreserveAspectRatio,SVGAnimatedRect,SVGAnimatedString,SVGAnimatedTransformList,SVGPathSegList,SVGPathSeg,SVGPathSegArcAbs,SVGPathSegArcRel,SVGPathSegClosePath,SVGPathSegCurvetoCubicAbs,SVGPathSegCurvetoCubicRel,SVGPathSegCurvetoCubicSmoothAbs,SVGPathSegCurvetoCubicSmoothRel,SVGPathSegCurvetoQuadraticAbs,SVGPathSegCurvetoQuadraticRel,SVGPathSegCurvetoQuadraticSmoothAbs,SVGPathSegCurvetoQuadraticSmoothRel,SVGPathSegLinetoAbs,SVGPathSegLinetoHorizontalAbs,SVGPathSegLinetoHorizontalRel,SVGPathSegLinetoRel,SVGPathSegLinetoVerticalAbs,SVGPathSegLinetoVerticalRel,SVGPathSegMovetoAbs,SVGPathSegMovetoRel,ElementTimeControl,TimeEvent,SVGAnimatedPathData,SVGAnimatedPoints,SVGColorProfileRule,SVGCSSRule,SVGExternalResourcesRequired,SVGFitToViewBox,SVGLangSpace,SVGLocatable,SVGRenderingIntent,SVGStylable,SVGTests,SVGTextContentElement,SVGTextPositioningElement,SVGTransformable,SVGUnitTypes,SVGURIReference,SVGViewSpec,SVGZoomAndPan&quot;);</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NEW</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_INCREMENT</span><span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_DECREMENT</span><span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_LOGICAL_NOT</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_BITWISE_NOT</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_UNARY_PLUS</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_UNARY_NEGATION</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_TYPEOF</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_VOID</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_DELETE</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MULTIPLICATION</span><span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_DIVISION</span><span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MODULUS</span><span class="pl-k">=</span><span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ADDITION</span><span class="pl-k">=</span><span class="pl-c1">6</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_SUBTRACTION</span><span class="pl-k">=</span><span class="pl-c1">6</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_BITWISE_SHIFT</span><span class="pl-k">=</span><span class="pl-c1">7</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_RELATIONAL</span><span class="pl-k">=</span><span class="pl-c1">8</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_IN</span><span class="pl-k">=</span><span class="pl-c1">8</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_INSTANCEOF</span><span class="pl-k">=</span><span class="pl-c1">8</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_EQUALITY</span><span class="pl-k">=</span><span class="pl-c1">9</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_BITWISE_AND</span><span class="pl-k">=</span><span class="pl-c1">10</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_BITWISE_XOR</span><span class="pl-k">=</span><span class="pl-c1">11</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_BITWISE_OR</span><span class="pl-k">=</span><span class="pl-c1">12</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_LOGICAL_AND</span><span class="pl-k">=</span><span class="pl-c1">13</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_LOGICAL_OR</span><span class="pl-k">=</span><span class="pl-c1">14</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_CONDITIONAL</span><span class="pl-k">=</span><span class="pl-c1">15</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span><span class="pl-k">=</span><span class="pl-c1">16</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span><span class="pl-k">=</span><span class="pl-c1">17</span>;</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_EQUALITY_ST</span><span class="pl-k">=</span><span class="pl-c1">18</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span><span class="pl-k">=</span><span class="pl-c1">99</span>;<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">init</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">definitions_</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">functionNames_</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span><span class="pl-k">?</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-c1">reset</span>()<span class="pl-k">:</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Blockly.Names</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">RESERVED_WORDS_</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-en">allVariables</span>(),b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(a[b],<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(a[b],<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>)};</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">finish</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c;<span class="pl-k">for</span>(c <span class="pl-k">in</span> <span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">definitions_</span>)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">definitions_</span>[c]);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\n\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">scrubNakedValue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">quote_</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\\\</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\n</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\\n</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&#39;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>&#39;<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>};</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">scrub_</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">outputConnection</span><span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">outputConnection</span>.<span class="pl-smi">targetConnection</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getCommentText</span>();d<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">+=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">prefixLines</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>// <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">inputList</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-smi">inputList</span>[e].<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-smi">Blockly</span>.<span class="pl-c1">INPUT_VALUE</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">inputList</span>[e].<span class="pl-smi">connection</span>.<span class="pl-en">targetBlock</span>())<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">allNestedComments</span>(d))<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">+=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">prefixLines</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>// <span class="pl-pds">&quot;</span></span>))}e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">nextConnection</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">nextConnection</span>.<span class="pl-en">targetBlock</span>();e<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">blockToCode</span>(e);<span class="pl-k">return</span> c<span class="pl-k">+</span>b<span class="pl-k">+</span>e};</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">colour</span><span class="pl-k">=</span>{};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">colour_picker</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>COLOUR<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">colour_random</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>colour_random<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>() {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var num = Math.floor(Math.random() * Math.pow(2, 24));<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return &#39;#&#39; + (&#39;00000&#39; + num.toString(16)).substr(-6);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>()<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">colour_pablo</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>colour_random<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>() {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  System.out.println(&#39;Hola&#39;)<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>()<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">colour_rgb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>RED<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>GREEN<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-c1">0</span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>BLUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>colour_rgb<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(r, g, b) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  r = Math.max(Math.min(Number(r), 100), 0) * 2.55;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  g = Math.max(Math.min(Number(g), 100), 0) * 2.55;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  b = Math.max(Math.min(Number(b), 100), 0) * 2.55;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>  r = (&#39;0&#39; + (Math.round(r) || 0).toString(16)).slice(-2);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  g = (&#39;0&#39; + (Math.round(g) || 0).toString(16)).slice(-2);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  b = (&#39;0&#39; + (Math.round(b) || 0).toString(16)).slice(-2);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return &#39;#&#39; + r + g + b;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">colour_blend</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>COLOUR1<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;#000000&#39;<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>COLOUR2<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;#000000&#39;<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>RATIO<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-c1">.5</span>;<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>colour_blend<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(c1, c2, ratio) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  ratio = Math.max(Math.min(Number(ratio), 1), 0);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var r1 = parseInt(c1.substring(1, 3), 16);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var g1 = parseInt(c1.substring(3, 5), 16);<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>  var b1 = parseInt(c1.substring(5, 7), 16);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var r2 = parseInt(c2.substring(1, 3), 16);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var g2 = parseInt(c2.substring(3, 5), 16);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var b2 = parseInt(c2.substring(5, 7), 16);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var r = Math.round(r1 * (1 - ratio) + r2 * ratio);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var g = Math.round(g1 * (1 - ratio) + g2 * ratio);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var b = Math.round(b1 * (1 - ratio) + b2 * ratio);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  r = (&#39;0&#39; + (r || 0).toString(16)).slice(-2);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  g = (&#39;0&#39; + (g || 0).toString(16)).slice(-2);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  b = (&#39;0&#39; + (b || 0).toString(16)).slice(-2);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return &#39;#&#39; + r + g + b;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Visual Blocks Language</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Copyright 2012 Google Inc.</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> https://blockly.googlecode.com/</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> you may not use this file except in compliance with the License.</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> You may obtain a copy of the License at</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   http://www.apache.org/licenses/LICENSE-2.0</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Unless required by applicable law or agreed to in writing, software</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> See the License for the specific language governing permissions and</span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> limitations under the License.</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">edx_custom</span><span class="pl-k">=</span>{};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">edx_set_variable_zero</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>int variable = 0;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">edx_print_variable</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&#39;</span>System.out.println(&quot;variable =&quot;+variable);<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span>};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">edx_basic_declare_boolean</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>boolean <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR_BOOL<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">edx_basic_declare_int</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>int <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">gimi</span><span class="pl-k">=</span>{};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variable_get</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">create_var</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>const_value<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>const__name<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>);<span class="pl-k">return</span>[<span class="pl-smi">a</span>.<span class="pl-en">getTitleValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>const_type<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">create_constant_arith</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>const_value<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>const__name<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>);<span class="pl-k">return</span>[<span class="pl-smi">a</span>.<span class="pl-en">getTitleValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>const_type<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">logic_compare_strings</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{<span class="pl-c1">EQ</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>.equals<span class="pl-pds">&quot;</span></span>}[<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OP<span class="pl-pds">&quot;</span></span>)],c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>==<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">?</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_EQUALITY</span><span class="pl-k">:</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_RELATIONAL</span>,d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,c)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>B<span class="pl-pds">&quot;</span></span>,c)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[d<span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,c]};</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">logic_compare</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{<span class="pl-c1">EQ</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>==<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">NEQ</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>!=<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">LT</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">LTE</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;=<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">GT</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">GTE</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;=<span class="pl-pds">&quot;</span></span>}[<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OP<span class="pl-pds">&quot;</span></span>)],c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>==<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>!=<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">?</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_EQUALITY</span><span class="pl-k">:</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_RELATIONAL</span>,d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,c)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>B<span class="pl-pds">&quot;</span></span>,c)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a,c]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">get_int</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_print_console</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>System.out.println(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TEXT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;&#39;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">arith_operation</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>op1<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>op2<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>);a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>operation<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">number</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">a</span>.<span class="pl-en">getTitleValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">constant</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-en">getTitleValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">abs</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.abs(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">trigonometric</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getTitleValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>operation<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getTitleValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>angle<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>*Math.PI/180)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">logarithm</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>base<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>);<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.log10(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>op<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)/Math.log10(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">pow</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>base<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>op<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>);<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.pow(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">random</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>op1<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>op2<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>);b<span class="pl-k">&gt;</span>c<span class="pl-k">?</span>(a<span class="pl-k">=</span>b,b<span class="pl-k">=</span>c)<span class="pl-k">:</span>a<span class="pl-k">=</span>c;<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.random(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)+<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">create_constant_boolean</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>);<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>boolean <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-en">getTitleValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">set_true_false</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">a</span>.<span class="pl-en">getTitleValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">not</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">and_or_xor</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>op1<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>op2<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>);a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getTitleValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">get_boolean</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">create_string</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>);<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>String <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-en">getTitleValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> =  <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">string_value</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-en">getTitleValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string_value<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">get_string</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">string_length</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.lentgh()<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">string_concat</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>string1<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>string2<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>);<span class="pl-k">return</span>[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.concat(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">string_substring</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>beginindex<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>endindex<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>);<span class="pl-k">return</span>[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.substring(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">procedures_nodefreturn</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Procedures</span>.<span class="pl-c1">NAME_TYPE</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>STACK<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">STATEMENT_PREFIX</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">prefixLines</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">STATEMENT_PREFIX</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%1<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INDENT</span>)<span class="pl-k">+</span>c);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INFINITE_LOOP_TRAP</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INFINITE_LOOP_TRAP</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%1<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>c);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>RETURN<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;d<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(a,</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>RETURN<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>  return <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)e[f]<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>[f],<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),e[f]<span class="pl-k">=</span><span class="pl-k">typeof</span> e[f]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e[f];f<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TYPE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>);b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>public void <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">scrub_</span>(a,b)};</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">procedures_defreturn_Int</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Procedures</span>.<span class="pl-c1">NAME_TYPE</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>STACK<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">STATEMENT_PREFIX</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">prefixLines</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">STATEMENT_PREFIX</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%1<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INDENT</span>)<span class="pl-k">+</span>c);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INFINITE_LOOP_TRAP</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INFINITE_LOOP_TRAP</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%1<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>c);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>RETURN<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>int<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>RETURN<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>  return <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>)f[g]<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>[g],<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),f[g]<span class="pl-k">=</span><span class="pl-k">typeof</span> f[g]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f[g];c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>public <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">scrub_</span>(a,c);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">definitions_</span>[b]<span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">null</span>};</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">procedures_defreturn_Boolean</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Procedures</span>.<span class="pl-c1">NAME_TYPE</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>STACK<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">STATEMENT_PREFIX</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">prefixLines</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">STATEMENT_PREFIX</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%1<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INDENT</span>)<span class="pl-k">+</span>c);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INFINITE_LOOP_TRAP</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INFINITE_LOOP_TRAP</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%1<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>c);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>RETURN<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span>;d<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>RETURN<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>  return <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>)f[g]<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>[g],<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),f[g]<span class="pl-k">=</span><span class="pl-k">typeof</span> f[g]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f[g];c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>public <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">scrub_</span>(a,c);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">definitions_</span>[b]<span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">null</span>};</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">procedures_defreturn_String</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Procedures</span>.<span class="pl-c1">NAME_TYPE</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>STACK<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">STATEMENT_PREFIX</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">prefixLines</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">STATEMENT_PREFIX</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%1<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INDENT</span>)<span class="pl-k">+</span>c);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INFINITE_LOOP_TRAP</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INFINITE_LOOP_TRAP</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%1<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>c);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>RETURN<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>String<span class="pl-pds">&quot;</span></span>;d<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>RETURN<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>  return <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>)f[g]<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>[g],<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),f[g]<span class="pl-k">=</span><span class="pl-k">typeof</span> f[g]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f[g];c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>public <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">scrub_</span>(a,c);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">definitions_</span>[b]<span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">null</span>};</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">lists</span><span class="pl-k">=</span>{};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">lists_create_empty</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">lists_create_with</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Array</span>(<span class="pl-smi">a</span>.<span class="pl-smi">itemCount_</span>),c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">itemCount_</span>;c<span class="pl-k">++</span>)b[c]<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>ADD<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>null<span class="pl-pds">&quot;</span></span>;b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[b,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">lists_repeat</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lists_repeat<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(value, n) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var array = [];<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  for (var i = 0; i &lt; n; i++) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    array[i] = value;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return array;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>ITEM<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>null<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>NUM<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">lists_length</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.length<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">lists_isEmpty</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.length<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_LOGICAL_NOT</span>]};</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">lists_indexOf</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>FIRST<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>END<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>indexOf<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lastIndexOf<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>FIND<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;&#39;<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) + 1<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>]};</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">lists_getIndex</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>MODE<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WHERE<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>FROM_START<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>AT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_UNARY_NEGATION</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FIRST<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>c){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>[0]<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET_REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.shift()<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span> a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.shift();<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>LAST<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>c){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.slice(-1)[0]<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>];</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET_REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.pop()<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span> a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.pop();<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FROM_START<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>c){d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-en">isNumber</span>(d)<span class="pl-k">?</span><span class="pl-c1">parseFloat</span>(d)<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> - 1<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET_REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.splice(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, 1)[0]<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span> a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.splice(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, 1);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FROM_END<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>c){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.slice(-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)[0]<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET_REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b){c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lists_remove_from_end<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(list, x) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  x = list.length - x;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return list.splice(x, 1)[0];<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]);d<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET_REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span>[d,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span> d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>RANDOM<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>c){c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lists_get_random_item<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(list, remove) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var x = Math.floor(Math.random() * list.length);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  if (remove) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    return list.splice(x, 1)[0];<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  } else {<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>    return list[x];<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]);d<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span>b)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>GET_REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span>[d,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>REMOVE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span> d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Unhandled combination (lists_getIndex).<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">lists_setIndex</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\w</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>))<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getDistinctName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tmp_list<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>var <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span>a;<span class="pl-k">return</span> b}<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LIST<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>MODE<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WHERE<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>FROM_START<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>AT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TO<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>null<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FIRST<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line">e){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SET<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d)<span class="pl-k">return</span> c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>[0] = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>INSERT<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d)<span class="pl-k">return</span> c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.unshift(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>LAST<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>e){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SET<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d)<span class="pl-k">return</span> e<span class="pl-k">=</span><span class="pl-en">b</span>(),e<span class="pl-k">+</span>(c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.length - 1] = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>INSERT<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d)<span class="pl-k">return</span> c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.push(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FROM_START<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>e){f<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-en">isNumber</span>(f)<span class="pl-k">?</span><span class="pl-c1">parseFloat</span>(f)<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> - 1<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SET<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d)<span class="pl-k">return</span> c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>] = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>INSERT<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d)<span class="pl-k">return</span> c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.splice(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, 0, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FROM_END<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>e){e<span class="pl-k">=</span><span class="pl-en">b</span>();<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SET<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d)<span class="pl-k">return</span> e<span class="pl-k">+=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.length - <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>] = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>INSERT<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d)<span class="pl-k">return</span> e<span class="pl-k">+=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.splice(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.length - <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, 0, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>RANDOM<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>e){e<span class="pl-k">=</span><span class="pl-en">b</span>();f<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getDistinctName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tmp_x<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>);e<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>var <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = Math.floor(Math.random() * <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.length);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SET<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d)<span class="pl-k">return</span> e<span class="pl-k">+=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>] = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>INSERT<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d)<span class="pl-k">return</span> e<span class="pl-k">+=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.splice(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, 0, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Unhandled combination (lists_setIndex).<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">lists_getSublist</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LIST<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WHERE1<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WHERE2<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>AT1<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>AT2<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>FIRST<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>LAST<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d<span class="pl-k">?</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.concat()<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lists_get_sublist<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(list, where1, at1, where2, at2) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  function getAt(where, at) {<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>    if (where == &#39;FROM_START&#39;) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      at--;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    } else if (where == &#39;FROM_END&#39;) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      at = list.length - at;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    } else if (where == &#39;FIRST&#39;) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      at = 0;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    } else if (where == &#39;LAST&#39;) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      at = list.length - 1;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    } else {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      throw &#39;Unhandled option (lists_getSublist).&#39;;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    return at;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  at1 = getAt(where1, at1);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  at2 = getAt(where2, at2) + 1;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return list.slice(at1, at2);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">logic</span><span class="pl-k">=</span>{};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">controls_if</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>IF<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>DO<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b),e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>if (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">=</span><span class="pl-c1">1</span>;b<span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">elseifCount_</span>;b<span class="pl-k">++</span>)c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>IF<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>DO<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b),e<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> else if (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-smi">elseCount_</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>ELSE<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> else {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">logic_compare_strings</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{<span class="pl-c1">EQ</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>.equals<span class="pl-pds">&quot;</span></span>}[<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OP<span class="pl-pds">&quot;</span></span>)],c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>==<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">?</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_EQUALITY</span><span class="pl-k">:</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_RELATIONAL</span>,d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,c)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>B<span class="pl-pds">&quot;</span></span>,c)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[d<span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)==true<span class="pl-pds">&quot;</span></span>,c]};</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">logic_compare</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{<span class="pl-c1">EQ</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>==<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">NEQ</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>!=<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">LT</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">LTE</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;=<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">GT</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">GTE</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;=<span class="pl-pds">&quot;</span></span>}[<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OP<span class="pl-pds">&quot;</span></span>)],c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>==<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>!=<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">?</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_EQUALITY</span><span class="pl-k">:</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_RELATIONAL</span>,d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,c)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>B<span class="pl-pds">&quot;</span></span>,c)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a,c]};</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">logic_operation</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>AND<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OP<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&amp;&amp;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>||<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&amp;&amp;<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">?</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_LOGICAL_AND</span><span class="pl-k">:</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_LOGICAL_OR</span>,d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,c);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>B<span class="pl-pds">&quot;</span></span>,c);<span class="pl-k">if</span>(d<span class="pl-k">||</span>a){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&amp;&amp;<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span>;d<span class="pl-k">||</span>(d<span class="pl-k">=</span>e);a<span class="pl-k">||</span>(a<span class="pl-k">=</span>e)}<span class="pl-k">else</span> a<span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a,c]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">logic_negate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_LOGICAL_NOT</span>;<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>BOOL<span class="pl-pds">&quot;</span></span>,b)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span>),b]};</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">logic_null</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>null<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">logic_ternary</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>IF<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_CONDITIONAL</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>THEN<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_CONDITIONAL</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>null<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>ELSE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_CONDITIONAL</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>null<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> ? <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> : <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_CONDITIONAL</span>]};</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">loops</span><span class="pl-k">=</span>{};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">controls_repeat</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Number</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TIMES<span class="pl-pds">&quot;</span></span>)),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>DO<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">addLoopTrap</span>(c,<span class="pl-smi">a</span>.<span class="pl-c1">id</span>);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getDistinctName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>count<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>);<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>for (var <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = 0; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> &lt; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>++) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">controls_repeat_ext</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TIMES<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>DO<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">addLoopTrap</span>(c,<span class="pl-smi">a</span>.<span class="pl-c1">id</span>);a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getDistinctName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>count<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),e<span class="pl-k">=</span>b;<span class="pl-smi">b</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\w</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>)<span class="pl-k">||</span><span class="pl-smi">Blockly</span>.<span class="pl-en">isNumber</span>(b)<span class="pl-k">||</span>(e<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getDistinctName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>repeat_end<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>var <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> a<span class="pl-k">+</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>for ( int <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = 0; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> &lt; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>++) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">controls_whileUntil</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>UNTIL<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>MODE<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>BOOL<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">?</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_LOGICAL_NOT</span><span class="pl-k">:</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>DO<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">addLoopTrap</span>(d,<span class="pl-smi">a</span>.<span class="pl-c1">id</span>);<span class="pl-k">return</span> b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>do{<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}while (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>while (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">controls_for</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>FROM<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TO<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>BY<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>DO<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">addLoopTrap</span>(f,<span class="pl-smi">a</span>.<span class="pl-c1">id</span>);<span class="pl-k">if</span>(<span class="pl-smi">Blockly</span>.<span class="pl-en">isNumber</span>(c)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">Blockly</span>.<span class="pl-en">isNumber</span>(d)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">Blockly</span>.<span class="pl-en">isNumber</span>(e)){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(c)<span class="pl-k">&lt;=</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">parseFloat</span>(d);a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>for (int <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span>(g<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span> &lt;= <span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span> &gt;= <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b;b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">parseFloat</span>(e));a<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>b<span class="pl-k">?</span>a<span class="pl-k">+</span>(g<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>++<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>--<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>a<span class="pl-k">+</span>((g<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span> += <span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span> -= <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>b))<span class="pl-k">+</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-k">else</span> a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span>c,<span class="pl-smi">c</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\w</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>)<span class="pl-k">||</span><span class="pl-smi">Blockly</span>.<span class="pl-en">isNumber</span>(c)<span class="pl-k">||</span>(g<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getDistinctName</span>(b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_start<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>var <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>d,<span class="pl-smi">d</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\w</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>)<span class="pl-k">||</span><span class="pl-smi">Blockly</span>.<span class="pl-en">isNumber</span>(d)<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getDistinctName</span>(b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_end<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>var <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getDistinctName</span>(b<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>_inc<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>var <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span>,a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-en">isNumber</span>(e)<span class="pl-k">?</span>a<span class="pl-k">+</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>a<span class="pl-k">+</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Math.abs(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>if (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> &gt; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INDENT</span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = -<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>for (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span>     <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> &gt;= 0 ? <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> &lt;= <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> : <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> &gt;= <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span>     <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> += <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> a};</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">controls_forEach</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LIST<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>DO<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">addLoopTrap</span>(d,<span class="pl-smi">a</span>.<span class="pl-c1">id</span>);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getDistinctName</span>(b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_index<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>);d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INDENT</span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>];<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>for (var <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> in <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">controls_flow_statements</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">switch</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FLOW<span class="pl-pds">&quot;</span></span>)){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>BREAK<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>break;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>CONTINUE<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>continue;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Unknown flow statement.<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">math</span><span class="pl-k">=</span>{};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">math_number</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-c1">parseFloat</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NUM<span class="pl-pds">&quot;</span></span>)),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">math_arithmetic</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{<span class="pl-c1">ADD</span><span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span> + <span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ADDITION</span>],<span class="pl-c1">MINUS</span><span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span> - <span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_SUBTRACTION</span>],<span class="pl-c1">MULTIPLY</span><span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span> * <span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MULTIPLICATION</span>],<span class="pl-c1">DIVIDE</span><span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span> / <span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_DIVISION</span>],<span class="pl-c1">POWER</span><span class="pl-k">:</span>[<span class="pl-c1">null</span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>]}[<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OP<span class="pl-pds">&quot;</span></span>)],c<span class="pl-k">=</span>b[<span class="pl-c1">0</span>],b<span class="pl-k">=</span>b[<span class="pl-c1">1</span>],d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,b)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>B<span class="pl-pds">&quot;</span></span>,b)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> c<span class="pl-k">?</span>[d<span class="pl-k">+</span>c<span class="pl-k">+</span>a,b]<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.pow(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">math_single</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OP<span class="pl-pds">&quot;</span></span>),c;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NEG<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b)<span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>NUM<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_UNARY_NEGATION</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>a[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a),[<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_UNARY_NEGATION</span>];a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>SIN<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>COS<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>TAN<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b<span class="pl-k">?</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>NUM<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_DIVISION</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>NUM<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ABS<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.abs(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ROOT<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.sqrt(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>LN<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.log(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>EXP<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.exp(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>POW10<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.pow(10,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ROUND<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.round(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ROUNDUP<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.ceil(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ROUNDDOWN<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.floor(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>SIN<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.sin(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> / 180 * Math.PI)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>COS<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.cos(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> / 180 * Math.PI)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>TAN<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.tan(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> / 180 * Math.PI)<span class="pl-pds">&quot;</span></span>}<span class="pl-k">if</span>(c)<span class="pl-k">return</span>[c,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>];<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>LOG10<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.log(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) / Math.log(10)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ASIN<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.asin(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) / Math.PI * 180<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ACOS<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.acos(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) / Math.PI * 180<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ATAN<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.atan(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) / Math.PI * 180<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Unknown math operator: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b;}<span class="pl-k">return</span>[c,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_DIVISION</span>]};</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">math_constant</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>{<span class="pl-c1">PI</span><span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.PI<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>],<span class="pl-c1">E</span><span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.E<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>],<span class="pl-c1">GOLDEN_RATIO</span><span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>(1 + Math.sqrt(5)) / 2<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_DIVISION</span>],<span class="pl-c1">SQRT2</span><span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.SQRT2<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>],<span class="pl-c1">SQRT1_2</span><span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.SQRT1_2<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>],<span class="pl-c1">INFINITY</span><span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Infinity<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]}[<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>CONSTANT<span class="pl-pds">&quot;</span></span>)]};</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">math_number_property</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>NUMBER_TO_CHECK<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MODULUS</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>PROPERTY<span class="pl-pds">&quot;</span></span>),d;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>PRIME<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>c)<span class="pl-k">return</span> d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>math_isPrime<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(n) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  if (n == 2 || n == 3) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    return true;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  // False if n is NaN, negative, is 1, or not whole.<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  // And false if n is divisible by 2 or 3.<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>  if (isNaN(n) || n &lt;= 1 || n % 1 != 0 || n % 2 == 0 || n % 3 == 0) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    return false;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  // Check all the numbers of form 6k +/- 1, up to sqrt(n).<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  for (var x = 6; x &lt;= Math.sqrt(n) + 1; x += 6) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    if (n % (x - 1) == 0 || n % (x + 1) == 0) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      return false;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return true;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,[d,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>];<span class="pl-k">switch</span>(c){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>EVEN<span class="pl-pds">&quot;</span></span>:d<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> % 2 == 0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ODD<span class="pl-pds">&quot;</span></span>:d<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> % 2 == 1<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>WHOLE<span class="pl-pds">&quot;</span></span>:d<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> % 1 == 0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>POSITIVE<span class="pl-pds">&quot;</span></span>:d<span class="pl-k">=</span>b<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span> &gt; 0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>NEGATIVE<span class="pl-pds">&quot;</span></span>:d<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> &lt; 0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>DIVISIBLE_BY<span class="pl-pds">&quot;</span></span>:a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>DIVISOR<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MODULUS</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> % <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> == 0<span class="pl-pds">&quot;</span></span>}<span class="pl-k">return</span>[d,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_EQUALITY</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">math_change</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>DELTA<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ADDITION</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>);<span class="pl-k">return</span> a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = (typeof <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> == &#39;number&#39; ? <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> : 0) + <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">math_round</span><span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">math_single</span>;</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">math_trig</span><span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">math_single</span>;</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">math_on_list</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OP<span class="pl-pds">&quot;</span></span>);<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>SUM<span class="pl-pds">&quot;</span></span>:a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LIST<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>.reduce(function(x, y) {return x + y;})<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>MIN<span class="pl-pds">&quot;</span></span>:a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LIST<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.min.apply(null, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>MAX<span class="pl-pds">&quot;</span></span>:a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LIST<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Math.max.apply(null, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>AVERAGE<span class="pl-pds">&quot;</span></span>:b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>math_mean<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(myList) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return myList.reduce(function(x, y) {return x + y;}) / myList.length;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LIST<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>MEDIAN<span class="pl-pds">&quot;</span></span>:b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>math_median<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(myList) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var localList = myList.filter(function (x) {return typeof x == &#39;number&#39;;});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  if (!localList.length) return null;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  localList.sort(function(a, b) {return b - a;});<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>  if (localList.length % 2 == 0) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    return (localList[localList.length / 2 - 1] + localList[localList.length / 2]) / 2;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  } else {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    return localList[(localList.length - 1) / 2];<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LIST<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>MODE<span class="pl-pds">&quot;</span></span>:b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>math_modes<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(values) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var modes = [];<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var counts = [];<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var maxCount = 0;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  for (var i = 0; i &lt; values.length; i++) {<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>    var value = values[i];<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    var found = false;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    var thisCount;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    for (var j = 0; j &lt; counts.length; j++) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      if (counts[j][0] === value) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>        thisCount = ++counts[j][1];<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>        found = true;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>        break;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    if (!found) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      counts.push([value, 1]);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      thisCount = 1;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    maxCount = Math.max(thisCount, maxCount);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  for (var j = 0; j &lt; counts.length; j++) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    if (counts[j][1] == maxCount) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>        modes.push(counts[j][0]);<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>    }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return modes;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LIST<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>STD_DEV<span class="pl-pds">&quot;</span></span>:b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>math_standard_deviation<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(numbers) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var n = numbers.length;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  if (!n) return null;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var mean = numbers.reduce(function(x, y) {return x + y;}) / n;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var variance = 0;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  for (var j = 0; j &lt; n; j++) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    variance += Math.pow(numbers[j] - mean, 2);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  variance = variance / n;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>  return Math.sqrt(variance);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LIST<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>RANDOM<span class="pl-pds">&quot;</span></span>:b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>math_random_list<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(list) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var x = Math.floor(Math.random() * list.length);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return list[x];<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LIST<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[]<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Unknown operator: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b;}<span class="pl-k">return</span>[a,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">math_modulo</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>DIVIDEND<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MODULUS</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>DIVISOR<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MODULUS</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> % <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MODULUS</span>]};</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">math_constrain</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>LOW<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>HIGH<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>Infinity<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.min(Math.max(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>), <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">math_random_int</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>FROM<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TO<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>math_random_int<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(a, b) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  if (a &gt; b) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    // Swap a and b to ensure a is smaller.<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    var c = a;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    a = b;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    b = c;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return Math.floor(Math.random() * (b - a + 1) + a);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">math_random_float</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>Math.random()<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">procedures</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">procedures_defreturn</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Procedures</span>.<span class="pl-c1">NAME_TYPE</span>),c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">statementToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>STACK<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">STATEMENT_PREFIX</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">prefixLines</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">STATEMENT_PREFIX</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%1<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INDENT</span>)<span class="pl-k">+</span>c);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INFINITE_LOOP_TRAP</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">INFINITE_LOOP_TRAP</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%1<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>c);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>RETURN<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>  return <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)e[f]<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>[f],<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>);c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">scrub_</span>(a,c);<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">definitions_</span>[b]<span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">null</span>};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">procedures_defnoreturn</span><span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">procedures_defreturn</span>;</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">procedures_callreturn</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Procedures</span>.<span class="pl-c1">NAME_TYPE</span>),c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)c[d]<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>ARG<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>null<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">procedures_callnoreturn</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NAME<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Procedures</span>.<span class="pl-c1">NAME_TYPE</span>),c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">arguments_</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)c[d]<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>ARG<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>null<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">procedures_ifreturn</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>if (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>CONDITION<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) {<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-smi">hasReturnValue_</span><span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>null<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>  return <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>b<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>  return;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">text</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_join</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-smi">itemCount_</span>)<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;&#39;<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>];<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-smi">itemCount_</span>)<span class="pl-k">return</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>ADD0<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>String(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>];<span class="pl-k">if</span>(<span class="pl-c1">2</span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-smi">itemCount_</span>)<span class="pl-k">return</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>ADD0<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>,a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>ADD1<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>String(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) + String(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ADDITION</span>];b<span class="pl-k">=</span><span class="pl-c1">Array</span>(<span class="pl-smi">a</span>.<span class="pl-smi">itemCount_</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">itemCount_</span>;c<span class="pl-k">++</span>)b[c]<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>ADD<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_COMMA</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>;b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>].join(&quot;&quot;)<span class="pl-pds">&#39;</span></span>;<span class="pl-k">return</span>[b,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_append</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>);a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TEXT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>;<span class="pl-k">return</span> b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = String(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) + String(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_length</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.length<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_isEmpty</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_LOGICAL_NOT</span>]};</td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_indexOf</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>FIRST<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>END<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>indexOf<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lastIndexOf<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>FIND<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>;<span class="pl-k">return</span>[(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) + 1<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>]};</td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_charAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WHERE<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>FROM_START<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>AT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_UNARY_NEGATION</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>;<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>FIRST<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.charAt(0)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>];<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>LAST<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.slice(-1)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>];<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>FROM_START<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> c<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-en">isNumber</span>(c)<span class="pl-k">?</span><span class="pl-c1">parseFloat</span>(c)<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> - 1<span class="pl-pds">&quot;</span></span>,[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.charAt(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>];<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>FROM_END<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span>[a<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>.slice(-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>).charAt(0)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>];<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>RANDOM<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text_random_letter<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(text) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  var x = Math.floor(Math.random() * text.length);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return text[x];<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,[b,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]}<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Unhandled option (text_charAt).<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_getSubstring</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>STRING<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WHERE1<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WHERE2<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>AT1<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>AT2<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>FIRST<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>LAST<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text_get_substring<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(text, where1, at1, where2, at2) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  function getAt(where, at) {<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>    if (where == &#39;FROM_START&#39;) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      at--;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    } else if (where == &#39;FROM_END&#39;) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      at = text.length - at;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    } else if (where == &#39;FIRST&#39;) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      at = 0;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    } else if (where == &#39;LAST&#39;) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      at = text.length - 1;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    } else {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      throw &#39;Unhandled option (text_getSubstring).&#39;;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    return at;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  at1 = getAt(where1, at1);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  at2 = getAt(where2, at2) + 1;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return text.slice(at1, at2);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_changeCase</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{<span class="pl-c1">UPPERCASE</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>.toUpperCase()<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">LOWERCASE</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>.toLowerCase()<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">TITLECASE</span><span class="pl-k">:</span><span class="pl-c1">null</span>}[<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>CASE<span class="pl-pds">&quot;</span></span>)];b<span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TEXT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>,a<span class="pl-k">+=</span>b)<span class="pl-k">:</span>(b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">provideFunction_</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text_toTitleCase<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>function <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">FUNCTION_NAME_PLACEHOLDER_</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(str) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  return str.replace(/<span class="pl-cce">\\</span>S+/g,<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>      function(txt) {return txt[0].toUpperCase() + txt.substring(1).toLowerCase();});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]),a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TEXT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;&#39;<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>[a,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_trim</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{<span class="pl-c1">LEFT</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>.trimLeft()<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">RIGHT</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>.trimRight()<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">BOTH</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>.trim()<span class="pl-pds">&quot;</span></span>}[<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>MODE<span class="pl-pds">&quot;</span></span>)];<span class="pl-k">return</span>[(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TEXT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_MEMBER</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">+</span>b,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_print</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>window.alert(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TEXT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_print_console</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>System.out.println(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TEXT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_prompt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>window.prompt(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">quote_</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TEXT<span class="pl-pds">&quot;</span></span>))<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-s"><span class="pl-pds">&quot;</span>NUMBER<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TYPE<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>parseFloat(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>[b,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">text_prompt_ext</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>window.prompt(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TEXT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-s"><span class="pl-pds">&quot;</span>NUMBER<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TYPE<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>parseFloat(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>[b,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_FUNCTION_CALL</span>]};</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variables</span><span class="pl-k">=</span>{};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variables_get</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variables_set</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">z_edx_literals</span><span class="pl-k">=</span>{};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">literal_text</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">quote_</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TEXT<span class="pl-pds">&quot;</span></span>)),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">literal_integer</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-c1">parseInt</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NUM<span class="pl-pds">&quot;</span></span>)),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">literal_boolean</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>TRUE<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>BOOL<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">z_edx_utils</span><span class="pl-k">=</span>{};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">print_value</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>System.out.println(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>TEXT<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_NONE</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Copyright 2012 Google Inc.  Apache License 2.0</span></td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">z_edx_variables</span><span class="pl-k">=</span>{};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variable_declare_string</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>);<span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">string_variables</span>.<span class="pl-c1">indexOf</span>(a)<span class="pl-k">&amp;&amp;</span>(string_variables[<span class="pl-smi">string_variables</span>.<span class="pl-c1">length</span>]<span class="pl-k">=</span>a);<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>String <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variable_get_string</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variable_set_string</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>;<span class="pl-k">return</span> <span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variable_declare_int</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>);<span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">int_variables</span>.<span class="pl-c1">indexOf</span>(a)<span class="pl-k">&amp;&amp;</span>(int_variables[<span class="pl-smi">int_variables</span>.<span class="pl-c1">length</span>]<span class="pl-k">=</span>a);<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>int <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variable_get_int</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variable_set_int</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variable_declare_boolean</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>);<span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">boolean_variables</span>.<span class="pl-c1">indexOf</span>(a)<span class="pl-k">&amp;&amp;</span>(boolean_variables[<span class="pl-smi">boolean_variables</span>.<span class="pl-c1">length</span>]<span class="pl-k">=</span>a);<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>boolean <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variable_get_boolean</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ATOMIC</span>]};</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">variable_set_boolean</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-en">valueToCode</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>VALUE<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-c1">ORDER_ASSIGNMENT</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-smi">Blockly</span>.<span class="pl-smi">Java</span>.<span class="pl-smi">variableDB_</span>.<span class="pl-en">getName</span>(<span class="pl-smi">a</span>.<span class="pl-en">getFieldValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VAR<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">Blockly</span>.<span class="pl-smi">Variables</span>.<span class="pl-c1">NAME_TYPE</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> = <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
</table>

  <details class="details-reset details-overlay BlobToolbar position-absolute js-file-line-actions dropdown d-none" aria-hidden="true">
    <summary class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1" aria-label="Inline file action toolbar">
      <svg class="octicon octicon-kebab-horizontal" viewBox="0 0 13 16" version="1.1" width="13" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm5 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM13 7.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>
    </summary>
    <details-menu>
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2" style="width:185px">
        <li><clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-lines" style="cursor:pointer;" data-original-text="Copy lines">Copy lines</clipboard-copy></li>
        <li><clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-permalink" style="cursor:pointer;" data-original-text="Copy permalink">Copy permalink</clipboard-copy></li>
        <li><a class="dropdown-item js-update-url-with-hash" id="js-view-git-blame" role="menuitem" href="/guizos/blockly_java_edx/blame/905fd85565e8179c7c707212f0a50e12e8d90377/java_compressed.js">View git blame</a></li>
          <li><a class="dropdown-item" id="js-new-issue" role="menuitem" href="/guizos/blockly_java_edx/issues/new">Reference in new issue</a></li>
      </ul>
    </details-menu>
  </details>

  </div>

    </div>

  

  <details class="details-reset details-overlay details-overlay-dark">
    <summary data-hotkey="l" aria-label="Jump to line"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast linejump" aria-label="Jump to line">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form Box-body d-flex" action="" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
        <input class="form-control flex-auto mr-3 linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
        <button type="submit" class="btn" data-close-dialog>Go</button>
</form>    </details-dialog>
  </details>



  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </main>
  </div>
  

  </div>

        
<div class="footer container-lg width-full p-responsive" role="contentinfo">
  <div class="position-relative d-flex flex-row-reverse flex-lg-row flex-wrap flex-lg-nowrap flex-justify-center flex-lg-justify-between pt-6 pb-2 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0">
      <li class="mr-3 mr-lg-0">&copy; 2019 <span title="0.62486s from unicorn-59868dd874-gl2rs">GitHub</span>, Inc.</li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to terms, text:terms" href="https://github.com/site/terms">Terms</a></li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to privacy, text:privacy" href="https://github.com/site/privacy">Privacy</a></li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to security, text:security" href="https://github.com/security">Security</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://githubstatus.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a data-ga-click="Footer, go to help, text:help" href="https://help.github.com">Help</a></li>
    </ul>

    <a aria-label="Homepage" title="GitHub" class="footer-octicon d-none d-lg-block mx-lg-4" href="https://github.com">
      <svg height="24" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="24" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
   <ul class="list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0">
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to contact, text:contact" href="https://github.com/contact">Contact GitHub</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.com/pricing" data-ga-click="Footer, go to Pricing, text:Pricing">Pricing</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>

    </ul>
  </div>
  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 text-gray-light"></span>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
    </button>
    You can’t perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha512-tvpJOpHKYOu+dVKq1e7vf5Ble6rQlpDAhxbiu8KqVZpeztFNcLtD1EwUsvHkXGe6lEIn+1xHgvt/m360g1gdCw==" type="application/javascript" src="https://github.githubassets.com/assets/frameworks-a142dc33.js"></script>
    
    <script crossorigin="anonymous" async="async" integrity="sha512-6iTdZ1uHpoxtkF2tkPpmbQkNDVLocOTPjudbmK39Xm9ASslpUXOr18yxeqtr6OQ8i8tWgFG2JIWjyGox09LyIA==" type="application/javascript" src="https://github.githubassets.com/assets/github-bootstrap-39864773.js"></script>
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner" hidden
    >
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default text-gray-dark hx_rsm" open>
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog>
        <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

  <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box box-shadow-large" style="width:360px;">
  </div>
</div>

  <div aria-live="polite" class="js-global-screen-reader-notice sr-only"></div>

  </body>
</html>

